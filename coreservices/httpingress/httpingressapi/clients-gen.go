/*
Copyright (c) 2023-2024 Microbus LLC and various contributors

This file and the project encapsulating it are the confidential intellectual property of Microbus LLC.
Neither may be used, copied or distributed without the express written consent of Microbus LLC.
*/

// Code generated by Microbus. DO NOT EDIT.

/*
Package httpingressapi implements the public API of the http.ingress.sys microservice,
including clients and data structures.

The HTTP ingress microservice relays incoming HTTP requests to the NATS bus.
*/
package httpingressapi

import (
	"context"
	"encoding/json"
	"net/http"
	"strings"
	"time"

	"github.com/microbus-io/fabric/errors"
	"github.com/microbus-io/fabric/httpx"
	"github.com/microbus-io/fabric/pub"
	"github.com/microbus-io/fabric/service"
	"github.com/microbus-io/fabric/sub"
)

var (
	_ context.Context
	_ *json.Decoder
	_ *http.Request
	_ strings.Reader
	_ time.Duration
	_ *errors.TracedError
	_ *httpx.BodyReader
	_ pub.Option
	_ sub.Option
)

// HostName is the default host name of the microservice: http.ingress.sys.
const HostName = "http.ingress.sys"

// Fully-qualified URLs of the microservice's endpoints.
var (
)

// Client is an interface to calling the endpoints of the http.ingress.sys microservice.
// This simple version is for unicast calls.
type Client struct {
	svc  service.PublisherSubscriber
	host string
}

// NewClient creates a new unicast client to the http.ingress.sys microservice.
func NewClient(caller service.PublisherSubscriber) *Client {
	return &Client{
		svc:  caller,
		host: "http.ingress.sys",
	}
}

// ForHost replaces the default host name of this client.
func (_c *Client) ForHost(host string) *Client {
	_c.host = host
	return _c
}

// MulticastClient is an interface to calling the endpoints of the http.ingress.sys microservice.
// This advanced version is for multicast calls.
type MulticastClient struct {
	svc  service.PublisherSubscriber
	host string
}

// NewMulticastClient creates a new multicast client to the http.ingress.sys microservice.
func NewMulticastClient(caller service.PublisherSubscriber) *MulticastClient {
	return &MulticastClient{
		svc:  caller,
		host: "http.ingress.sys",
	}
}

// ForHost replaces the default host name of this client.
func (_c *MulticastClient) ForHost(host string) *MulticastClient {
	_c.host = host
	return _c
}
