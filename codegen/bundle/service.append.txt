{{- range .Configs }}{{ if .Callback }}{{ if not .Exists }}
// OnChanged{{ .Name }} is triggered when the value of the {{ .Name }} config property changes.
func (svc *Service) OnChanged{{ .Name }}(ctx context.Context) (err error) {
	// TO{{/**/}}DO: Implement OnChanged{{ .Name }}
	// val := svc.{{ .Name }}()
	return nil
}
{{ end }}{{ end }}{{ end }}

{{- range (JoinHandlers .Functions .Sinks) }}{{ if not .Exists }}
/*
{{ .Description }}
*/
func (svc *Service) {{ .Name }}(ctx context.Context {{- .In ", name type" }}) ({{ .Out "name type," -}} err error) {
	// TO{{/**/}}DO: Implement {{ .Name }}
	return {{ .Out "name," -}} nil
}
{{ end }}{{ end }}

{{- range .Webs }}{{- if not .Exists }}
/*
{{ .Description }}
*/
func (svc *Service) {{ .Name }}(w http.ResponseWriter, r *http.Request) (err error) {
	// TO{{/**/}}DO: Implement {{ .Name }}
	// ctx := r.Context()
	return nil
}
{{ end }}{{ end }}

{{- range .Tickers }}{{ if not .Exists }}
/*
{{ .Description }}
*/
func (svc *Service) {{ .Name }}(ctx context.Context) (err error) {
	// TO{{/**/}}DO: Implement {{ .Name }}
	return nil
}
{{ end }}{{ end }}

{{- range .Metrics }}{{ if .Callback }}{{ if not .Exists }}
/*
OnObserve{{ .Name }} observes the value of the {{ .Name }} {{ .Kind }} metric.
{{ .Description }}
*/
func (svc *Service) OnObserve{{ .Name }}(ctx context.Context) (err error) {
	// TO{{/**/}}DO: Implement OnObserve{{ .Name }}
	// svc.
	{{- if eq .Kind "counter" }}Add{{ end }}
	{{- if eq .Kind "gauge" }}Record{{ end }}
	{{- if eq .Kind "histogram" }}Record{{ end }}
	{{- .Name }}(ctx {{- .In ",name" }})
	return nil
}
{{ end }}{{ end }}{{ end }}