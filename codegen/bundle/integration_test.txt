package {{ .PackageSuffix }}

import (
	"testing"

	"github.com/stretchr/testify/assert"

	"{{ .Package }}/{{ .PackageSuffix }}api"
)

var (
	_ *testing.T
	_ assert.TestingT
	_ *{{ .PackageSuffix }}api.Client
)

// Initialize starts up the testing app.
func Initialize() (err error) {	
	App.Init(func(svc service.Service) {
		// Initialize all microservices
	})

	// Include all downstream microservices in the testing app
	App.Include(
		Svc.Init(func(svc *Service) {
			// Initialize the microservice under test
			{{- range .Configs }}
			// svc.Set{{ .Name }}({{ with index .Signature.OutputArgs 0 }}{{ .Name }}{{ end }})
			{{- end}}
		}),
		// downstream.NewService().Init(func(svc *downstream.Service) {}),
	)

	err = App.Startup()
	if err != nil {
		return err
	}
	// All microservices are now running

	return nil
}

// Terminate shuts down the testing app.
func Terminate() (err error) {
	err = App.Shutdown()
	if err != nil {
		return err
	}
	return nil
}
